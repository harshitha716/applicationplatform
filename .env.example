# mode
MODE=local

# postgres
PG_DATABASE_URL=postgres://postgres:postgrespassword@postgres:5432/postgres?sslmode=disable
PG_MAX_OPEN_CONNECTIONS=2
PG_MAX_IDLE_CONNECTIONS=2

# api service
PG_DATABASE_URL_APP=postgres://postgres:postgrespassword@postgres:5432/postgres?sslmode=disable&search_path=app
AUTH_HOST=http://auth:4433
AUTH_ADMIN_HOST=http://auth:4434
CORS_ALLOWED_ORIGINS=http://localhost:3000
PANTHEON_URL=http://host.docker.internal:8000
CONTROL_PLANE_ADMIN_SECRETS=secret1,secret2
# temporal
TEMPORAL_HOST=temporal:7233
TEMPORAL_NAMESPACE=default

#auth service

DSN="postgres://postgres:postgrespassword@postgres:5432/postgres?sslmode=disable&search_path=kratos"
LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL=http://localhost:3000
SELFSERVICE_DEFAULT_BROWSER_RETURN_URL=http://localhost:3000
SELFSERVICE_ALLOWED_RETURN_URLS=http://localhost:3000
COURIER_SMTP_CONNECTION_URI=smtp://mailhog:1025/?skip_ssl_verify=true
SERVE_PUBLIC_BASE_URL=http://localhost:8080/auth/relay
SERVE_ADMIN_BASE_URL=http://auth:4434
SELFSERVICE_FLOWS_LOGIN_AFTER_OIDC_DEFAULT_BROWSER_RETURN_URL=http://localhost:3000/login
SELFSERVICE_FLOWS_REGISTRATION_AFTER_OIDC_DEFAULT_BROWSER_RETURN_URL=http://localhost:3000/login
SELFSERVICE_FLOWS_ERROR_UI_URL=http://localhost:3000/login
SELFSERVICE_METHODS_OIDC_CONFIG_BASE_REDIRECT_URL=http://localhost:3000/login
SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS='[{"id":"google-id","provider":"google","mapper_url":"file:///home/ory/mapper.jsonnet","client_id":"622745278345-4f2dpjdmd8jpbd0khmd6ve2lc9hk9ttn.apps.googleusercontent.com","client_secret":"<secret>","scope":["openid","email","profile"],"auth_url":"https://accounts.google.com/o/oauth2/v2/auth","token_url":"https://www.googleapis.com/oauth2/v4/token","issuer_url":"https://accounts.google.com"}]'
SELFSERVICE_FLOWS_REGISTRATION_AFTER_OIDC_HOOKS_0_CONFIG_URL='http://api:8080/auth/internal/webhook'
SELFSERVICE_FLOWS_REGISTRATION_AFTER_OIDC_HOOKS_0_CONFIG_HEADERS='{"X-Zamp-Admin-Secret":"secret1"}'
SELFSERVICE_FLOWS_REGISTRATION_AFTER_PASSWORD_HOOKS_0_CONFIG_URL='http://api:8080/auth/internal/webhook'
SELFSERVICE_FLOWS_REGISTRATION_AFTER_PASSWORD_HOOKS_0_CONFIG_HEADERS='{"X-Zamp-Admin-Secret":"secret1"}'
SECRETS_DEFAULT="[\"verysecretsecretsecret1\", \"verysecretsecretsecret2\"]"


# dev setup
APPLICATION_PLATFORM_LOCAL_PATH=path 
APPLICATION_PLATFORM_BRANCH=main

# environment - 'local', 'development', 'staging', 'production'
ENVIRONMENT=local

# dataplatform config
DATAPLATFORM_CONFIG='{}'

# for running API service without docker
AUTH_HOST_LOCALHOST=http://localhost:4433
PG_DATABASE_URL_LOCALHOST=postgres://postgres:postgrespassword@localhost:5432/postgres?sslmode=disable
PG_DATABASE_URL_APP_LOCALHOST="postgres://postgres:postgrespassword@localhost:5432/postgres?sslmode=disable&search_path=app"

GCP_ACCESS_ID=zamp-dev-sg-hcp@development-351109.iam.gserviceaccount.com
GCP_BUCKET_NAME=zamp-dev-sg-ap-files

SPARKPOST_API_KEY="key"
SPARKPOST_API_URL="https://api.sparkpost.com/api/v1"
ZAMP_EMAIL_UPDATES_FROM="noreply@zamp.ai"
EMAIL_TEMPLATES_PATH="/app/email-templates"

AWS_ACCESS_KEY_ID="key"
AWS_SECRET_ACCESS_KEY="secret"
AWS_SESSION_TOKEN="token"
AWS_REGION="us-east-1"
AWS_DEFAULT_BUCKET_NAME="zamp-dev-us-application-platform"
DATAPLATFORM_PROVIDER=databricks

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=redispassword
REDIS_DB=0
