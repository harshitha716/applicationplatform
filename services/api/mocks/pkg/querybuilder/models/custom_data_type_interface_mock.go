// Code generated by mockery v2.50.0. DO NOT EDIT.

package mock_models

import mock "github.com/stretchr/testify/mock"

// MockCustomDataTypeInterface is an autogenerated mock type for the CustomDataTypeInterface type
type MockCustomDataTypeInterface struct {
	mock.Mock
}

type MockCustomDataTypeInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCustomDataTypeInterface) EXPECT() *MockCustomDataTypeInterface_Expecter {
	return &MockCustomDataTypeInterface_Expecter{mock: &_m.Mock}
}

// GetAggregationColumn provides a mock function with no fields
func (_m *MockCustomDataTypeInterface) GetAggregationColumn() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAggregationColumn")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockCustomDataTypeInterface_GetAggregationColumn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAggregationColumn'
type MockCustomDataTypeInterface_GetAggregationColumn_Call struct {
	*mock.Call
}

// GetAggregationColumn is a helper method to define mock.On call
func (_e *MockCustomDataTypeInterface_Expecter) GetAggregationColumn() *MockCustomDataTypeInterface_GetAggregationColumn_Call {
	return &MockCustomDataTypeInterface_GetAggregationColumn_Call{Call: _e.mock.On("GetAggregationColumn")}
}

func (_c *MockCustomDataTypeInterface_GetAggregationColumn_Call) Run(run func()) *MockCustomDataTypeInterface_GetAggregationColumn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCustomDataTypeInterface_GetAggregationColumn_Call) Return(_a0 string) *MockCustomDataTypeInterface_GetAggregationColumn_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCustomDataTypeInterface_GetAggregationColumn_Call) RunAndReturn(run func() string) *MockCustomDataTypeInterface_GetAggregationColumn_Call {
	_c.Call.Return(run)
	return _c
}

// GetFilterColumn provides a mock function with no fields
func (_m *MockCustomDataTypeInterface) GetFilterColumn() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFilterColumn")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockCustomDataTypeInterface_GetFilterColumn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFilterColumn'
type MockCustomDataTypeInterface_GetFilterColumn_Call struct {
	*mock.Call
}

// GetFilterColumn is a helper method to define mock.On call
func (_e *MockCustomDataTypeInterface_Expecter) GetFilterColumn() *MockCustomDataTypeInterface_GetFilterColumn_Call {
	return &MockCustomDataTypeInterface_GetFilterColumn_Call{Call: _e.mock.On("GetFilterColumn")}
}

func (_c *MockCustomDataTypeInterface_GetFilterColumn_Call) Run(run func()) *MockCustomDataTypeInterface_GetFilterColumn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCustomDataTypeInterface_GetFilterColumn_Call) Return(_a0 string) *MockCustomDataTypeInterface_GetFilterColumn_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCustomDataTypeInterface_GetFilterColumn_Call) RunAndReturn(run func() string) *MockCustomDataTypeInterface_GetFilterColumn_Call {
	_c.Call.Return(run)
	return _c
}

// GetGroupByColumn provides a mock function with no fields
func (_m *MockCustomDataTypeInterface) GetGroupByColumn() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetGroupByColumn")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockCustomDataTypeInterface_GetGroupByColumn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGroupByColumn'
type MockCustomDataTypeInterface_GetGroupByColumn_Call struct {
	*mock.Call
}

// GetGroupByColumn is a helper method to define mock.On call
func (_e *MockCustomDataTypeInterface_Expecter) GetGroupByColumn() *MockCustomDataTypeInterface_GetGroupByColumn_Call {
	return &MockCustomDataTypeInterface_GetGroupByColumn_Call{Call: _e.mock.On("GetGroupByColumn")}
}

func (_c *MockCustomDataTypeInterface_GetGroupByColumn_Call) Run(run func()) *MockCustomDataTypeInterface_GetGroupByColumn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCustomDataTypeInterface_GetGroupByColumn_Call) Return(_a0 string) *MockCustomDataTypeInterface_GetGroupByColumn_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCustomDataTypeInterface_GetGroupByColumn_Call) RunAndReturn(run func() string) *MockCustomDataTypeInterface_GetGroupByColumn_Call {
	_c.Call.Return(run)
	return _c
}

// GetSelectColumn provides a mock function with no fields
func (_m *MockCustomDataTypeInterface) GetSelectColumn() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSelectColumn")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockCustomDataTypeInterface_GetSelectColumn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSelectColumn'
type MockCustomDataTypeInterface_GetSelectColumn_Call struct {
	*mock.Call
}

// GetSelectColumn is a helper method to define mock.On call
func (_e *MockCustomDataTypeInterface_Expecter) GetSelectColumn() *MockCustomDataTypeInterface_GetSelectColumn_Call {
	return &MockCustomDataTypeInterface_GetSelectColumn_Call{Call: _e.mock.On("GetSelectColumn")}
}

func (_c *MockCustomDataTypeInterface_GetSelectColumn_Call) Run(run func()) *MockCustomDataTypeInterface_GetSelectColumn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCustomDataTypeInterface_GetSelectColumn_Call) Return(_a0 string) *MockCustomDataTypeInterface_GetSelectColumn_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCustomDataTypeInterface_GetSelectColumn_Call) RunAndReturn(run func() string) *MockCustomDataTypeInterface_GetSelectColumn_Call {
	_c.Call.Return(run)
	return _c
}

// Validate provides a mock function with no fields
func (_m *MockCustomDataTypeInterface) Validate() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockCustomDataTypeInterface_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type MockCustomDataTypeInterface_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
func (_e *MockCustomDataTypeInterface_Expecter) Validate() *MockCustomDataTypeInterface_Validate_Call {
	return &MockCustomDataTypeInterface_Validate_Call{Call: _e.mock.On("Validate")}
}

func (_c *MockCustomDataTypeInterface_Validate_Call) Run(run func()) *MockCustomDataTypeInterface_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCustomDataTypeInterface_Validate_Call) Return(_a0 error) *MockCustomDataTypeInterface_Validate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCustomDataTypeInterface_Validate_Call) RunAndReturn(run func() error) *MockCustomDataTypeInterface_Validate_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCustomDataTypeInterface creates a new instance of MockCustomDataTypeInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCustomDataTypeInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCustomDataTypeInterface {
	mock := &MockCustomDataTypeInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
